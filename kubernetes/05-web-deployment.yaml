apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    openproject.service: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      openproject.service: web
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        openproject.network/backend: "true"
        openproject.network/frontend: "true"
        openproject.service: web
    spec:
      containers:
        - args:
            - ./docker/prod/web
          env:
            - name: DATABASE_URL
              value: postgres://postgres:p4ssw0rd@$(DB_SERVICE_HOST):$(DB_SERVICE_PORT)/openproject?pool=20&encoding=unicode&reconnect=true
            - name: IMAP_ENABLED
              value: "false"
            - name: OPENPROJECT_CACHE__MEMCACHE__SERVER
              value: $(CACHE_SERVICE_HOST):$(CACHE_SERVICE_PORT)
            - name: OPENPROJECT_RAILS__RELATIVE__URL__ROOT
            - name: RAILS_CACHE_STORE
              value: memcache
            - name: RAILS_MAX_THREADS
              value: "16"
            - name: RAILS_MIN_THREADS
              value: "4"
          image: openproject/community:12
          ports:
            - containerPort: 8080
              name: http
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost:8080/health_checks/default
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
          name: web
          resources: {}
          volumeMounts:
            - mountPath: /var/openproject/assets
              name: opdata
      restartPolicy: Always
      volumes:
        - name: opdata
          persistentVolumeClaim:
            claimName: opdata
status: {}
